@page "/userlist"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@using IntegrationProject.Data.Models;

<AuthorizeView>
    <div class="col">
        <a href="Identity/Account/Register"
           class="btn btn-primary btn-lg" 
        style="text-decoration: none;margin-bottom:20px">
        Register a new user</a>
    </div>
</AuthorizeView>
 

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else if (users.Count() == 1) //solo esta el mismo usuario
{
    <p><em>No other users to display.</em></p>
}
else
{
<AuthorizeView>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Role</th>
                    <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users.Where(u => u.Username != @context.User.Identity?.Name)) //excluyo al usuario actual
            {
                <tr>
                    <td><div style="margin-top:7px">@user.Username</div></td>
                    <td><div style="margin-top:7px">@user.Role</div></td>
                    
                        <td>
                            <button class="btn btn-danger" >Delete</button>
                        </td>
                </tr>
            }
        </tbody>
    </table>
</AuthorizeView>
}


@code {
    private List<UserModel>? users;

    protected override async Task OnInitializedAsync()
    {
        //FlightState.OnConfirmConfigureFlightDialog += HandleConfigureFlightDialogConfirm;
        await RefreshUsers();
    }

    private async Task RefreshUsers()
    {
        users = await HttpClient.GetFromJsonAsync<List<UserModel>>($"{NavigationManager.BaseUri}users");
        StateHasChanged();
    }

    private async Task HandleConfigureFlightDialogConfirm()
    {
        await RefreshUsers();
    }

    
}
