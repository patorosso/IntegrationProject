@page "/fetchdata"
@using IntegrationProject.Data
@using IntegrationProject.Models;
@using IntegrationProject.FlightState;
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject FlightState FlightState

<PageTitle>Flight List</PageTitle>

<h1>Flight list</h1>

<p>Listing flights from all around the world.</p>

@if (flights == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Flight number</th>
                <th>Airline</th>
                <th>Status</th>
                <th>Departure</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var flight in flights)
            {
                <tr>
                    <td><div style="margin-top:7px">@flight.FlightNumber</div></td>
                    <td><div style="margin-top:7px">@flight.Airline?.Name</div></td>
                    <td><div style="margin-top:7px">@(flight.Delayed == false ? "On time" : "Delayed")</div></td>
                    <td><div style="margin-top:7px">@flight.Takeoff</div></td>
                    <td>
                        <button class="btn btn-warning" @onclick="() => FlightState.ShowConfigureFlightDialog(flight)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteFlight(flight)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (FlightState.ShowingConfigureDialog)
{
    <FormModal Flight="FlightState.ConfiguringFlight"
    OnCancel="FlightState.CancelConfigureFlightDialog"
    OnConfirm="FlightState.ConfirmConfigureFlightDialog"
    />
}


@code {

    private List<Flight>? flights;

    protected override async Task OnInitializedAsync() => flights = await
    HttpClient.GetFromJsonAsync<List<Flight>>($"{NavigationManager.BaseUri}flights");

    private async Task DeleteFlight(Flight flight)
    {
        var response = await HttpClient.DeleteAsync($"{NavigationManager.BaseUri}flights/{flight.Id}");

        if (response.IsSuccessStatusCode)
        {
            flights?.Remove(flight);
        }
        else
        {
            // Handle error scenario
        }
    }

}
